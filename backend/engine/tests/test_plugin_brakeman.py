import unittest

from engine.plugins.brakeman import main as brakeman


class TestPluginBrakeman(unittest.TestCase):
    def test_build_output(self):
        null = None
        data = {
            "scan_info": {
                "app_path": "/src/railsgoat",
                "rails_version": "5.1.7",
                "security_warnings": 17,
                "start_time": "2019-06-12T08:28:42.000000+00:00",
                "end_time": "2019-06-12T08:28:43.000000+00:00",
                "duration": 1.04239,
                "checks_performed": [
                    "BasicAuth",
                    "BasicAuthTimingAttack",
                    "ContentTag",
                    "CreateWith",
                    "CrossSiteScripting",
                    "DefaultRoutes",
                    "Deserialize",
                    "DetailedExceptions",
                    "DigestDoS",
                    "DynamicFinders",
                    "EscapeFunction",
                    "Evaluation",
                    "Execute",
                    "FileAccess",
                    "FileDisclosure",
                    "FilterSkipping",
                    "ForgerySetting",
                    "HeaderDoS",
                    "I18nXSS",
                    "JRubyXML",
                    "JSONEncoding",
                    "JSONParsing",
                    "LinkTo",
                    "LinkToHref",
                    "MailTo",
                    "MassAssignment",
                    "MimeTypeDoS",
                    "ModelAttrAccessible",
                    "ModelAttributes",
                    "ModelSerialize",
                    "NestedAttributes",
                    "NestedAttributesBypass",
                    "NumberToCurrency",
                    "PermitAttributes",
                    "QuoteTableName",
                    "Redirect",
                    "RegexDoS",
                    "Render",
                    "RenderDoS",
                    "RenderInline",
                    "ResponseSplitting",
                    "RouteDoS",
                    "SQL",
                    "SQLCVEs",
                    "SSLVerify",
                    "SafeBufferManipulation",
                    "SanitizeMethods",
                    "SelectTag",
                    "SelectVulnerability",
                    "Send",
                    "SendFile",
                    "SessionManipulation",
                    "SessionSettings",
                    "SimpleFormat",
                    "SingleQuotes",
                    "SkipBeforeFilter",
                    "SprocketsPathTraversal",
                    "StripTags",
                    "SymbolDoSCVE",
                    "TranslateBug",
                    "UnsafeReflection",
                    "ValidationRegex",
                    "WithoutProtection",
                    "XMLDoS",
                    "YAMLParsing",
                ],
                "number_of_controllers": 17,
                "number_of_models": 12,
                "number_of_templates": 27,
                "ruby_version": "2.3.7",
                "brakeman_version": "4.5.1",
            },
            "warnings": [
                {
                    "warning_type": "Remote Code Execution",
                    "warning_code": 25,
                    "fingerprint": "07f5143982fb589796b35ec8252bef03d16" "96639ba57242317926977ae7e0d49",
                    "check_name": "Deserialize",
                    "message": "`Marshal.load` called with parameter value",
                    "file": "app/controllers/password_resets_controller.rb",
                    "line": 6,
                    "link": "https://brakemanscanner.org/docs/" "warning_types/unsafe_deserialization",
                    "code": "Marshal.load(Base64.decode64(params[:user]))",
                    "render_path": None,
                    "location": {"type": "method", "class": "PasswordResetsController", "method": "reset_password"},
                    "user_input": "params[:user]",
                    "confidence": "Medium",
                },
                {
                    "warning_type": "SQL Injection",
                    "warning_code": 0,
                    "fingerprint": "27033d08c8870bed7adc52075447f220c78d5e3b2" "c42ad05dc2c36625a0f5774",
                    "check_name": "SQL",
                    "message": "Possible SQL injection",
                    "file": "app/models/analytics.rb",
                    "line": 3,
                    "link": "https://brakemanscanner.org/docs/warning_types/" "sql_injection/",
                    "code": 'select("#{col}")',
                    "render_path": None,
                    "location": {"type": "method", "class": "Analytics", "method": "hits_by_ip"},
                    "user_input": "col",
                    "confidence": "Medium",
                },
                {
                    "warning_type": "Dangerous Send",
                    "warning_code": 23,
                    "fingerprint": "46e6c67ae633f6424618e3efff2f8325e1babf" "d6fa09da557147c2cad905d052",
                    "check_name": "Send",
                    "message": "User controlled method execution",
                    "file": "app/controllers/dashboard_controller.rb",
                    "line": 16,
                    "link": "https://brakemanscanner.org/docs/warning" "_types/dangerous_send/",
                    "code": "self.try(params[:graph])",
                    "render_path": None,
                    "location": {"type": "method", "class": "DashboardController", "method": "change_graph"},
                    "user_input": "params[:graph]",
                    "confidence": "High",
                },
                {
                    "warning_type": "Session Setting",
                    "warning_code": 26,
                    "fingerprint": "686c3e9fd57abd6d1e64ec2fbadcc4a786a986" "c4657af270d73c661a55f2a1ab",
                    "check_name": "SessionSettings",
                    "message": "Session cookies should be set to HTTP only",
                    "file": "config/initializers/session_store.rb",
                    "line": 4,
                    "link": "https://brakemanscanner.org/docs/warning_types/" "session_setting/",
                    "code": None,
                    "render_path": None,
                    "location": None,
                    "user_input": None,
                    "confidence": "High",
                },
                {
                    "warning_type": "Cross-Site Request Forgery",
                    "warning_code": 7,
                    "fingerprint": "6f5239fb87c64764d0c209014deb5cf504c2c1" "0ee424bd33590f0a4f22e01d8f",
                    "check_name": "ForgerySetting",
                    "message": "`protect_from_forgery` should be" " called in `ApplicationController`",
                    "file": "app/controllers/application_controller.rb",
                    "line": 2,
                    "link": "https://brakemanscanner.org/docs" "/warning_types/" "cross-site_request_forgery/",
                    "code": None,
                    "render_path": None,
                    "location": {"type": "controller", "controller": "ApplicationController"},
                    "user_input": None,
                    "confidence": "High",
                },
                {
                    "warning_type": "Session Setting",
                    "warning_code": 29,
                    "fingerprint": "715ad9c0d76f57a6a657192574d528b620176a" "80fec969e2f63c88eacab0b984",
                    "check_name": "SessionSettings",
                    "message": "Session secret should not be included in" " version control",
                    "file": "config/initializers/secret_token.rb",
                    "line": 8,
                    "link": "https://brakemanscanner.org" "/docs/warning_types/session_setting/",
                    "code": None,
                    "render_path": None,
                    "location": None,
                    "user_input": None,
                    "confidence": "High",
                },
                {
                    "warning_type": "Session Setting",
                    "warning_code": 29,
                    "fingerprint": "715ad9c0d76f57a6a657192574d528b620176" "a80fec969e2f63c88eacab0b984",
                    "check_name": "SessionSettings",
                    "message": "Session secret should not be included in" " version control",
                    "file": "config/initializers/secret_token.rb",
                    "line": 9,
                    "link": "https://brakemanscanner.org" "/docs/warning_types/session_setting/",
                    "code": None,
                    "render_path": None,
                    "location": None,
                    "user_input": None,
                    "confidence": "High",
                },
                {
                    "warning_type": "Remote Code Execution",
                    "warning_code": 24,
                    "fingerprint": "71abb51a4f55c73468d91ccb62ff3719" "fe1d66f20032c8873d274f5c699d92fe",
                    "check_name": "UnsafeReflection",
                    "message": "Unsafe reflection method `constantize`" " called with parameter value",
                    "file": "app/controllers/api/v1/mobile_controller.rb",
                    "line": 17,
                    "link": "https://brakemanscanner.org/docs/" "warning_types/remote_code_execution/",
                    "code": "params[:class].classify.constantize",
                    "render_path": None,
                    "location": {"type": "method", "class": "Api::V1::MobileController", "method": "index"},
                    "user_input": "params[:class].classify",
                    "confidence": "High",
                },
                {
                    "warning_type": "Mass Assignment",
                    "warning_code": 105,
                    "fingerprint": "753fe10585146c8cd9f3734a71439" "46da237745ff2b6162b7f5cb333675b080f",
                    "check_name": "PermitAttributes",
                    "message": "Potentially dangerous key allowed for " "mass assignment",
                    "file": "app/controllers/users_controller.rb",
                    "line": 55,
                    "link": "https://brakemanscanner.org/" "docs/warning_types/mass_assignment/",
                    "code": "params.require(:user).permit(:email, " ":admin, :first_name, :last_name)",
                    "render_path": None,
                    "location": {
                        "type": "method",
                        "class": "UsersController",
                        "method": "user_params_without_password",
                    },
                    "user_input": ":admin",
                    "confidence": "High",
                },
                {
                    "warning_type": "SQL Injection",
                    "warning_code": 0,
                    "fingerprint": "7fe869279cad8ef1a72c671c1dc7" "46b25b5d310aadd645c8555dae1ff1ba0349",
                    "check_name": "SQL",
                    "message": "Possible SQL injection",
                    "file": "app/controllers/users_controller.rb",
                    "line": 29,
                    "link": "https://brakemanscanner.org/" "docs/warning_types/sql_injection/",
                    "code": "User.where(\"id = '#{params[:user][:id]}'\")",
                    "render_path": None,
                    "location": {"type": "method", "class": "UsersController", "method": "update"},
                    "user_input": "params[:user][:id]",
                    "confidence": "High",
                },
                {
                    "warning_type": "Mass Assignment",
                    "warning_code": 70,
                    "fingerprint": "9f34c0a29e2cde79abdccddc790291d548128f0e4" "7f75ed53f499da9249b66b8",
                    "check_name": "MassAssignment",
                    "message": "Parameters should be whitelisted" " for mass assignment",
                    "file": "app/controllers/users_controller.rb",
                    "line": 50,
                    "link": "https://brakemanscanner.org/docs/warning" "_types/mass_assignment/",
                    "code": "params.require(:user).permit!",
                    "render_path": None,
                    "location": {"type": "method", "class": "UsersController", "method": "user_params"},
                    "user_input": None,
                    "confidence": "Medium",
                },
                {
                    "warning_type": "Format Validation",
                    "warning_code": 30,
                    "fingerprint": "a21418b38aa77ef73946105fb1c9e3623b7be67a2" "419b960793871587200cbcc",
                    "check_name": "ValidationRegex",
                    "message": "Insufficient validation for `email`"
                    " using `/.+@.+\\..+/i`. Use "
                    "`\\A` and `\\z` as anchors",
                    "file": "app/models/user.rb",
                    "line": 13,
                    "link": "https://brakemanscanner.org/docs/" "warning_types/format_validation/",
                    "code": None,
                    "render_path": None,
                    "location": {"type": "model", "model": "User"},
                    "user_input": None,
                    "confidence": "High",
                },
                {
                    "warning_type": "Command Injection",
                    "warning_code": 14,
                    "fingerprint": "b07b623a859b5fda9cd1dbd80" "aa3d19171cc257c1bce4c6e92" "04a45e563a85b3",
                    "check_name": "Execute",
                    "message": "Possible command injection",
                    "file": "app/models/benefits.rb",
                    "line": 15,
                    "link": "https://brakemanscanner.org/docs/" "warning_types/command_injection/",
                    "code": 'system("cp #{full_file_name} #{data'
                    "_path}/bak#{Time.zone.now.to_i}_#{"
                    'file.original_filename}")',
                    "render_path": None,
                    "location": {"type": "method", "class": "Benefits", "method": "Benefits.make_backup"},
                    "user_input": "full_file_name",
                    "confidence": "Medium",
                },
                {
                    "warning_type": "Remote Code Execution",
                    "warning_code": 24,
                    "fingerprint": "ba6443b7682abc8ba6c4ee8" "fdf13bbc6cfcd3aa7b7bdfc" "f812ec99f4e5b7a641",
                    "check_name": "UnsafeReflection",
                    "message": "Unsafe reflection method `" "constantize` called with" " parameter value",
                    "file": "app/controllers/api/v1/mobile_c" "ontroller.rb",
                    "line": 10,
                    "link": "https://brakemanscanner.org/doc" "s/warning_types/remote_code_execution/",
                    "code": "params[:class].classify.constantize",
                    "render_path": None,
                    "location": {"type": "method", "class": "Api::V1::MobileController", "method": "show"},
                    "user_input": "params[:class].classify",
                    "confidence": "High",
                },
                {
                    "warning_type": "File Access",
                    "warning_code": 16,
                    "fingerprint": "f63861a0e7ecd271e9f4" "211fbf6fe843bde57b48d" "3a11b475a80b27a9abf3759",
                    "check_name": "SendFile",
                    "message": "Parameter value used in file name",
                    "file": "app/controllers/benefit_forms_" "controller.rb",
                    "line": 12,
                    "link": "https://brakemanscanner.org/docs/" "warning_types/file_access/",
                    "code": "send_file(params[:type].constan"
                    "tize.new(params[:name]), :dispos"
                    'ition => "attachment")',
                    "render_path": None,
                    "location": {"type": "method", "class": "BenefitFormsController", "method": "download"},
                    "user_input": "params[:type].constantize" ".new(params[:name])",
                    "confidence": "High",
                },
                {
                    "warning_type": "Cross-Site Scripting",
                    "warning_code": 2,
                    "fingerprint": "febb21e45b226bb6bcdc23031" "091394a3ed80c76357f66b1f34" "8844a7626f4df",
                    "check_name": "CrossSiteScripting",
                    "message": "Unescaped cookie value",
                    "file": "app/views/layouts/application.html.erb",
                    "line": 12,
                    "link": "https://brakemanscanner.org/" "docs/warning_types/cross-sit" "e_scripting/",
                    "code": "cookies[:font]",
                    "render_path": [
                        {
                            "type": "controller",
                            "class": "AdminController",
                            "method": "dashboard",
                            "line": 9,
                            "file": "app/controllers/admin_controller.rb",
                            "rendered": {
                                "name": "layouts/application",
                                "file": "app/views/layouts/app" "lication.html.erb",
                            },
                        }
                    ],
                    "location": {"type": "template", "template": "layouts/application"},
                    "user_input": None,
                    "confidence": "High",
                },
                {
                    "warning_type": "Remote Code Execution",
                    "warning_code": 24,
                    "fingerprint": "ff21c7fa4c5ef7f975a7113" "04bcbd91447abe9723c54c59" "cb8e75a675ef7bf21",
                    "check_name": "UnsafeReflection",
                    "message": "Unsafe reflection method `con" "stantize` called with paramete" "r value",
                    "file": "app/controllers/benefit_forms_" "controller.rb",
                    "line": 11,
                    "link": "https://brakemanscanner.org/d" "ocs/warning_types/remote_code_" "execution/",
                    "code": "params[:type].constantize",
                    "render_path": None,
                    "location": {"type": "method", "class": "Benefit" "FormsController", "method": "download"},
                    "user_input": "params[:type]",
                    "confidence": "High",
                },
            ],
            "ignored_warnings": [],
            "errors": [],
            "obsolete": [],
        }

        actual = brakeman.build_output(data)
        expected = [
            {
                "code": "Marshal.load(Ba" "se64.decode64(params[:user]))",
                "confidence": "Medium",
                "filename": "app/controllers/password_" "resets_controller.rb",
                "line": 6,
                "message": "`Marshal.load`" " called with" " parameter value",
                "type": "Remote Code Execution",
            },
            {
                "code": 'select("#{col}")',
                "confidence": "Medium",
                "filename": "app/models/analytics.rb",
                "line": 3,
                "message": "Possible SQL injection",
                "type": "SQL Injection",
            },
            {
                "code": "self.try(params[:graph])",
                "confidence": "High",
                "filename": "app/controllers/dashboard" "_controller.rb",
                "line": 16,
                "message": "User control" "led method execution",
                "type": "Dangerous Send",
            },
            {
                "code": null,
                "confidence": "High",
                "filename": "config/initializers/session_st" "ore.rb",
                "line": 4,
                "message": "Session cookies should b" "e set to HTTP only",
                "type": "Session Setting",
            },
            {
                "code": null,
                "confidence": "High",
                "filename": "app/controllers/application_c" "ontroller.rb",
                "line": 2,
                "message": "`protect_from_forgery` " "should be called in `Appli" "cationController`",
                "type": "Cross-Site Request Forgery",
            },
            {
                "code": null,
                "confidence": "High",
                "filename": "config/initializers/secret_token.rb",
                "line": 8,
                "message": "Session secret should n" "ot be included in version" " control",
                "type": "Session Setting",
            },
            {
                "code": null,
                "confidence": "High",
                "filename": "config/initializers/secret_token.rb",
                "line": 9,
                "message": "Session secret should not be" " included in version control",
                "type": "Session Setting",
            },
            {
                "code": "params[:class].classify.constantize",
                "confidence": "High",
                "filename": "app/controllers/api/v1/mobile_" "controller.rb",
                "line": 17,
                "message": "Unsafe reflection method " "`constantize` called with " "parameter value",
                "type": "Remote Code Execution",
            },
            {
                "code": "params.require(:user).permit(:ema" "il, :admin, :first_name, :last_name)",
                "confidence": "High",
                "filename": "app/controllers/users_controller.rb",
                "line": 55,
                "message": "Potentially dangerous key allowed " "for mass assignment",
                "type": "Mass Assignment",
            },
            {
                "code": "User.where(\"id = '#{pa" "rams[:user][:id]}'\")",
                "confidence": "High",
                "filename": "app/controllers/users_controller.rb",
                "line": 29,
                "message": "Possible SQL injection",
                "type": "SQL Injection",
            },
            {
                "code": "params.require(:user).permit!",
                "confidence": "Medium",
                "filename": "app/controllers/users_controller.rb",
                "line": 50,
                "message": "Parameters should be whitelisted" " for mass assignment",
                "type": "Mass Assignment",
            },
            {
                "code": null,
                "confidence": "High",
                "filename": "app/models/user.rb",
                "line": 13,
                "message": "Insufficient validation for `email`"
                " using `/.+@.+\\..+/i`. Use `\\A`"
                " and `\\z` as anchors",
                "type": "Format Validation",
            },
            {
                "code": 'system("cp #{full_file_name} #'
                "{data_path}/bak#{Time.zone.now.to_i}"
                '_#{file.original_filename}")',
                "confidence": "Medium",
                "filename": "app/models/benefits.rb",
                "line": 15,
                "message": "Possible command injection",
                "type": "Command Injection",
            },
            {
                "code": "params[:class].classify.constantize",
                "confidence": "High",
                "filename": "app/controllers/api/v1/mobile_controller.rb",
                "line": 10,
                "message": "Unsafe reflection method `constantize`" " called with parameter value",
                "type": "Remote Code Execution",
            },
            {
                "code": "send_file(params[:type].constantize." "new(params[:name]), :disposition => " '"attachment")',
                "confidence": "High",
                "filename": "app/controllers/benefit_forms_controller.rb",
                "line": 12,
                "message": "Parameter value used in file name",
                "type": "File Access",
            },
            {
                "code": "cookies[:font]",
                "confidence": "High",
                "filename": "app/views/layouts/application.html.erb",
                "line": 12,
                "message": "Unescaped cookie value",
                "type": "Cross-Site Scripting",
            },
            {
                "code": "params[:type].constantize",
                "confidence": "High",
                "filename": "app/controllers/benefit_forms_cont" "roller.rb",
                "line": 11,
                "message": "Unsafe reflection method `" "constantize` called with " "parameter value",
                "type": "Remote Code Execution",
            },
        ]

        self.assertEqual(actual, expected)


if __name__ == "__main__":
    unittest.main()
