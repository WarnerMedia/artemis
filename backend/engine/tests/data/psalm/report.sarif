{
    "version": "2.1.0",
    "$schema": "https:\/\/json.schemastore.org\/sarif-2.1.0.json",
    "runs": [
        {
            "tool": {
                "driver": {
                    "name": "Psalm",
                    "informationUri": "https:\/\/psalm.dev",
                    "version": "6.10.3@90b5b9f5e7c8e441b191d3c82c58214753d7c7c1",
                    "rules": [
                        {
                            "id": "244",
                            "name": "TaintedSql",
                            "shortDescription": {
                                "text": "TaintedSql"
                            },
                            "properties": {
                                "tags": [
                                    "security"
                                ]
                            },
                            "helpUri": "https:\/\/psalm.dev\/244",
                            "help": {
                                "markdown": "# TaintedSql\n\nEmitted when user-controlled input can be passed into a SQL command.\n\n```php\n<?php\n\nclass A {\n    public function deleteUser(PDO $pdo) : void {\n        $userId = self::getUserId();\n        $pdo->exec(\"delete from users where user_id = \" . $userId);\n    }\n\n    public static function getUserId() : string {\n        return (string) $_GET[\"user_id\"];\n    }\n}\n```\n",
                                "text": "# TaintedSql\n\nEmitted when user-controlled input can be passed into a SQL command.\n\n```php\n<?php\n\nclass A {\n    public function deleteUser(PDO $pdo) : void {\n        $userId = self::getUserId();\n        $pdo->exec(\"delete from users where user_id = \" . $userId);\n    }\n\n    public static function getUserId() : string {\n        return (string) $_GET[\"user_id\"];\n    }\n}\n```\n"
                            }
                        },
                        {
                            "id": "245",
                            "name": "TaintedHtml",
                            "shortDescription": {
                                "text": "TaintedHtml"
                            },
                            "properties": {
                                "tags": [
                                    "security"
                                ]
                            },
                            "helpUri": "https:\/\/psalm.dev\/245",
                            "help": {
                                "markdown": "# TaintedHtml\n\nEmitted when user-controlled input that can contain HTML can be passed into an `echo` statement.\n\n## Risk\n\nThis could lead to a potential Cross Site Scripting (XSS) vulnerability. Using an XSS vulnerability, an attacker could inject malicious JavaScript and execute any action JavaScript could do. Examples include:\n\n- Stealing authentication material (e.g. cookies, JWT tokens)\n- Exfiltrate sensitive information by reading the DOM\n- Keylog entries on the website (e.g. fake login form)\n\nWhether this is exploitable or not depends on a few conditions:\n\n- Is an executable mimetype set? (e.g. `text\/html`)\n- Is the content served inline or as attachment? (`Content-Disposition`)\n- Is the output properly sanitized? (e.g. stripping all HTML tags or having an allowlist of allowed characters)\n\n## Example\n\n```php\n<?php\n\n$name = $_GET[\"name\"];\n\nprintName($name);\n\nfunction printName(string $name) {\n    echo $name;\n}\n```\n\n## Mitigations\n\n- Sanitize user-input by using functions such as `htmlentities` or use an allowlist.\n- Set all cookies to `HTTPOnly`.\n- Consider using Content Security Policy (CSP), to limit the risk of XSS vulnerabilities.\n- If user input itself is HTML, see [Sanitizing HTML User Input](..\/..\/security_analysis\/avoiding_false_positives.md#sanitizing-html-user-input)\n\n## Further resources\n\n- [OWASP Wiki for Cross Site Scripting (XSS)](https:\/\/owasp.org\/www-community\/attacks\/xss\/)\n- [Content-Security-Policy - Web Fundamentals](https:\/\/developers.google.com\/web\/fundamentals\/security\/csp)\n",
                                "text": "# TaintedHtml\n\nEmitted when user-controlled input that can contain HTML can be passed into an `echo` statement.\n\n## Risk\n\nThis could lead to a potential Cross Site Scripting (XSS) vulnerability. Using an XSS vulnerability, an attacker could inject malicious JavaScript and execute any action JavaScript could do. Examples include:\n\n- Stealing authentication material (e.g. cookies, JWT tokens)\n- Exfiltrate sensitive information by reading the DOM\n- Keylog entries on the website (e.g. fake login form)\n\nWhether this is exploitable or not depends on a few conditions:\n\n- Is an executable mimetype set? (e.g. `text\/html`)\n- Is the content served inline or as attachment? (`Content-Disposition`)\n- Is the output properly sanitized? (e.g. stripping all HTML tags or having an allowlist of allowed characters)\n\n## Example\n\n```php\n<?php\n\n$name = $_GET[\"name\"];\n\nprintName($name);\n\nfunction printName(string $name) {\n    echo $name;\n}\n```\n\n## Mitigations\n\n- Sanitize user-input by using functions such as `htmlentities` or use an allowlist.\n- Set all cookies to `HTTPOnly`.\n- Consider using Content Security Policy (CSP), to limit the risk of XSS vulnerabilities.\n- If user input itself is HTML, see [Sanitizing HTML User Input](..\/..\/security_analysis\/avoiding_false_positives.md#sanitizing-html-user-input)\n\n## Further resources\n\n- [OWASP Wiki for Cross Site Scripting (XSS)](https:\/\/owasp.org\/www-community\/attacks\/xss\/)\n- [Content-Security-Policy - Web Fundamentals](https:\/\/developers.google.com\/web\/fundamentals\/security\/csp)\n"
                            }
                        },
                        {
                            "id": "274",
                            "name": "TaintedTextWithQuotes",
                            "shortDescription": {
                                "text": "TaintedTextWithQuotes"
                            },
                            "properties": {
                                "tags": [
                                    "security"
                                ]
                            },
                            "helpUri": "https:\/\/psalm.dev\/274",
                            "help": {
                                "markdown": "# TaintedTextWithQuotes\n\nEmitted when user-controlled input that can contain quotation marks can be passed into an `echo` statement.\n\n## Risk\n\nThis could lead to a potential Cross Site Scripting (XSS) vulnerability. Using an XSS vulnerability, an attacker could inject malicious JavaScript and execute any action JavaScript could do. Examples include:\n\n- Stealing authentication material (e.g. cookies, JWT tokens)\n- Exfiltrate sensitive information by reading the DOM\n- Keylog entries on the website (e.g. fake login form)\n\nWhether this is exploitable or not depends on a few conditions:\n\n- Is an executable mimetype set? (e.g. `text\/html`)\n- Is the content served inline or as attachment? (`Content-Disposition`)\n- Is the output properly sanitized? (e.g. stripping all HTML tags or having an allowlist of allowed characters)\n\n## Example\n\n```php\n<?php\n$param = strip_tags($_GET['param']);\n?>\n\n<script>\n    console.log('<?=$param?>')\n<\/script>\n```\n\nPassing `');alert('injection');\/\/` as a `GET` param here would cause the `alert` to trigger.\n\n## Mitigations\n\n- Sanitize user input by using functions such as `htmlentities` with the `ENT_QUOTES` flag or use an allowlist.\n- Set all cookies to `HTTPOnly`.\n- Consider using Content Security Policy (CSP), to limit the risk of XSS vulnerabilities.\n- If user input itself is HTML, see [Sanitizing HTML User Input](..\/..\/security_analysis\/avoiding_false_positives.md#sanitizing-html-user-input)\n\n## Further resources\n\n- [OWASP Wiki for Cross Site Scripting (XSS)](https:\/\/owasp.org\/www-community\/attacks\/xss\/)\n- [Content-Security-Policy - Web Fundamentals](https:\/\/developers.google.com\/web\/fundamentals\/security\/csp)\n",
                                "text": "# TaintedTextWithQuotes\n\nEmitted when user-controlled input that can contain quotation marks can be passed into an `echo` statement.\n\n## Risk\n\nThis could lead to a potential Cross Site Scripting (XSS) vulnerability. Using an XSS vulnerability, an attacker could inject malicious JavaScript and execute any action JavaScript could do. Examples include:\n\n- Stealing authentication material (e.g. cookies, JWT tokens)\n- Exfiltrate sensitive information by reading the DOM\n- Keylog entries on the website (e.g. fake login form)\n\nWhether this is exploitable or not depends on a few conditions:\n\n- Is an executable mimetype set? (e.g. `text\/html`)\n- Is the content served inline or as attachment? (`Content-Disposition`)\n- Is the output properly sanitized? (e.g. stripping all HTML tags or having an allowlist of allowed characters)\n\n## Example\n\n```php\n<?php\n$param = strip_tags($_GET['param']);\n?>\n\n<script>\n    console.log('<?=$param?>')\n<\/script>\n```\n\nPassing `');alert('injection');\/\/` as a `GET` param here would cause the `alert` to trigger.\n\n## Mitigations\n\n- Sanitize user input by using functions such as `htmlentities` with the `ENT_QUOTES` flag or use an allowlist.\n- Set all cookies to `HTTPOnly`.\n- Consider using Content Security Policy (CSP), to limit the risk of XSS vulnerabilities.\n- If user input itself is HTML, see [Sanitizing HTML User Input](..\/..\/security_analysis\/avoiding_false_positives.md#sanitizing-html-user-input)\n\n## Further resources\n\n- [OWASP Wiki for Cross Site Scripting (XSS)](https:\/\/owasp.org\/www-community\/attacks\/xss\/)\n- [Content-Security-Policy - Web Fundamentals](https:\/\/developers.google.com\/web\/fundamentals\/security\/csp)\n"
                            }
                        }
                    ]
                }
            },
            "results": [
                {
                    "ruleId": "244",
                    "message": {
                        "text": "Detected tainted SQL"
                    },
                    "level": "error",
                    "rank": 98,
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "main.php"
                                },
                                "region": {
                                    "startLine": 8,
                                    "endLine": 8,
                                    "startColumn": 28,
                                    "endColumn": 34
                                }
                            }
                        }
                    ],
                    "codeFlows": [
                        {
                            "message": {
                                "text": "Tracing the path from user input to insecure usage"
                            },
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "main.php"
                                                    },
                                                    "region": {
                                                        "startLine": 6,
                                                        "endLine": 6,
                                                        "startColumn": 14,
                                                        "endColumn": 19
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "main.php"
                                                    },
                                                    "region": {
                                                        "startLine": 6,
                                                        "endLine": 6,
                                                        "startColumn": 1,
                                                        "endColumn": 11
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "main.php"
                                                    },
                                                    "region": {
                                                        "startLine": 7,
                                                        "endLine": 7,
                                                        "startColumn": 52,
                                                        "endColumn": 62
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "main.php"
                                                    },
                                                    "region": {
                                                        "startLine": 7,
                                                        "endLine": 7,
                                                        "startColumn": 1,
                                                        "endColumn": 7
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "main.php"
                                                    },
                                                    "region": {
                                                        "startLine": 8,
                                                        "endLine": 8,
                                                        "startColumn": 28,
                                                        "endColumn": 34
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "ruleId": "245",
                    "message": {
                        "text": "Detected tainted HTML"
                    },
                    "level": "error",
                    "rank": 98,
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "post.php"
                                },
                                "region": {
                                    "startLine": 3,
                                    "endLine": 3,
                                    "startColumn": 6,
                                    "endColumn": 23
                                }
                            }
                        }
                    ],
                    "codeFlows": [
                        {
                            "message": {
                                "text": "Tracing the path from user input to insecure usage"
                            },
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "post.php"
                                                    },
                                                    "region": {
                                                        "startLine": 3,
                                                        "endLine": 3,
                                                        "startColumn": 6,
                                                        "endColumn": 12
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "post.php"
                                                    },
                                                    "region": {
                                                        "startLine": 3,
                                                        "endLine": 3,
                                                        "startColumn": 6,
                                                        "endColumn": 23
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "ruleId": "274",
                    "message": {
                        "text": "Detected tainted text with possible quotes"
                    },
                    "level": "error",
                    "rank": 98,
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "post.php"
                                },
                                "region": {
                                    "startLine": 3,
                                    "endLine": 3,
                                    "startColumn": 6,
                                    "endColumn": 23
                                }
                            }
                        }
                    ],
                    "codeFlows": [
                        {
                            "message": {
                                "text": "Tracing the path from user input to insecure usage"
                            },
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "post.php"
                                                    },
                                                    "region": {
                                                        "startLine": 3,
                                                        "endLine": 3,
                                                        "startColumn": 6,
                                                        "endColumn": 12
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "post.php"
                                                    },
                                                    "region": {
                                                        "startLine": 3,
                                                        "endLine": 3,
                                                        "startColumn": 6,
                                                        "endColumn": 23
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}